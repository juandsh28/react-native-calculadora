{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from \"react\";\nimport Button from \"./Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Styles } from \"../styles/GlobalStyles\";\nimport { myColors } from \"../styles/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function MyKeyboard() {\n  var _React$useState = React.useState(\"\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      firstNumber = _React$useState2[0],\n      setFirstNumber = _React$useState2[1];\n\n  var _React$useState3 = React.useState(\"\"),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      secondNumber = _React$useState4[0],\n      setSecondNumber = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      operation = _React$useState6[0],\n      setOperation = _React$useState6[1];\n\n  var _React$useState7 = React.useState(null),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      result = _React$useState8[0],\n      setResult = _React$useState8[1];\n\n  var handleNumberPress = function handleNumberPress(buttonValue) {\n    if (firstNumber.length < 10) {\n      setFirstNumber(firstNumber + buttonValue);\n    }\n  };\n\n  var handleOperationPress = function handleOperationPress(buttonValue) {\n    setOperation(buttonValue);\n    setSecondNumber(firstNumber);\n    setFirstNumber(\"\");\n  };\n\n  var clear = function clear() {\n    setFirstNumber(\"\");\n    setSecondNumber(\"\");\n    setOperation(\"\");\n    setResult(null);\n  };\n\n  var firstNumberDisplay = function firstNumberDisplay() {\n    if (result !== null) {\n      return _jsx(Text, {\n        style: result < 99999 ? [Styles.screenFirstNumber, {\n          color: myColors.result\n        }] : [Styles.screenFirstNumber, {\n          fontSize: 50,\n          color: myColors.result\n        }],\n        children: result == null ? void 0 : result.toString()\n      });\n    }\n\n    if (firstNumber && firstNumber.length < 6) {\n      return _jsx(Text, {\n        style: Styles.screenFirstNumber,\n        children: firstNumber\n      });\n    }\n\n    if (firstNumber === \"\") {\n      return _jsx(Text, {\n        style: Styles.screenFirstNumber,\n        children: \"0\"\n      });\n    }\n\n    if (firstNumber.length > 5 && firstNumber.length < 8) {\n      return _jsx(Text, {\n        style: [Styles.screenFirstNumber, {\n          fontSize: 70\n        }],\n        children: firstNumber\n      });\n    }\n\n    if (firstNumber.length > 7) {\n      return _jsx(Text, {\n        style: [Styles.screenFirstNumber, {\n          fontSize: 50\n        }],\n        children: firstNumber\n      });\n    }\n  };\n\n  var getResult = function getResult() {\n    switch (operation) {\n      case \"+\":\n        clear();\n        setResult(parseInt(secondNumber) + parseInt(firstNumber));\n        break;\n\n      case \"-\":\n        clear();\n        setResult(parseInt(secondNumber) - parseInt(firstNumber));\n        break;\n\n      case \"*\":\n        clear();\n        setResult(parseInt(secondNumber) * parseInt(firstNumber));\n        break;\n\n      case \"/\":\n        clear();\n        setResult(parseInt(secondNumber) / parseInt(firstNumber));\n        break;\n\n      default:\n        clear();\n        setResult(0);\n        break;\n    }\n  };\n\n  return _jsxs(View, {\n    style: Styles.viewBottom,\n    children: [_jsxs(View, {\n      style: {\n        height: 120,\n        width: \"90%\",\n        justifyContent: \"flex-end\",\n        alignSelf: \"center\"\n      },\n      children: [_jsxs(Text, {\n        style: Styles.screenSecondNumber,\n        children: [secondNumber, _jsx(Text, {\n          style: {\n            color: \"purple\",\n            fontSize: 50,\n            fontWeight: \"500\"\n          },\n          children: operation\n        })]\n      }), firstNumberDisplay()]\n    }), _jsxs(View, {\n      style: Styles.row,\n      children: [_jsx(Button, {\n        title: \"C\",\n        isGray: true,\n        onPress: clear\n      }), _jsx(Button, {\n        title: \"+/-\",\n        isGray: true,\n        onPress: function onPress() {\n          return handleOperationPress(\"+/-\");\n        }\n      }), _jsx(Button, {\n        title: \"\\uFF05\",\n        isGray: true,\n        onPress: function onPress() {\n          return handleOperationPress(\"ï¼…\");\n        }\n      }), _jsx(Button, {\n        title: \"\\xF7\",\n        isBlue: true,\n        onPress: function onPress() {\n          return handleOperationPress(\"/\");\n        }\n      })]\n    }), _jsxs(View, {\n      style: Styles.row,\n      children: [_jsx(Button, {\n        title: \"7\",\n        onPress: function onPress() {\n          return handleNumberPress(\"7\");\n        }\n      }), _jsx(Button, {\n        title: \"8\",\n        onPress: function onPress() {\n          return handleNumberPress(\"8\");\n        }\n      }), _jsx(Button, {\n        title: \"9\",\n        onPress: function onPress() {\n          return handleNumberPress(\"9\");\n        }\n      }), _jsx(Button, {\n        title: \"\\xD7\",\n        isBlue: true,\n        onPress: function onPress() {\n          return handleOperationPress(\"*\");\n        }\n      })]\n    }), _jsxs(View, {\n      style: Styles.row,\n      children: [_jsx(Button, {\n        title: \"4\",\n        onPress: function onPress() {\n          return handleNumberPress(\"4\");\n        }\n      }), _jsx(Button, {\n        title: \"5\",\n        onPress: function onPress() {\n          return handleNumberPress(\"5\");\n        }\n      }), _jsx(Button, {\n        title: \"6\",\n        onPress: function onPress() {\n          return handleNumberPress(\"6\");\n        }\n      }), _jsx(Button, {\n        title: \"-\",\n        isBlue: true,\n        onPress: function onPress() {\n          return handleOperationPress(\"-\");\n        }\n      })]\n    }), _jsxs(View, {\n      style: Styles.row,\n      children: [_jsx(Button, {\n        title: \"1\",\n        onPress: function onPress() {\n          return handleNumberPress(\"1\");\n        }\n      }), _jsx(Button, {\n        title: \"2\",\n        onPress: function onPress() {\n          return handleNumberPress(\"2\");\n        }\n      }), _jsx(Button, {\n        title: \"3\",\n        onPress: function onPress() {\n          return handleNumberPress(\"3\");\n        }\n      }), _jsx(Button, {\n        title: \"+\",\n        isBlue: true,\n        onPress: function onPress() {\n          return handleOperationPress(\"+\");\n        }\n      })]\n    }), _jsxs(View, {\n      style: Styles.row,\n      children: [_jsx(Button, {\n        title: \".\",\n        onPress: function onPress() {\n          return handleNumberPress(\".\");\n        }\n      }), _jsx(Button, {\n        title: \"0\",\n        onPress: function onPress() {\n          return handleNumberPress(\"0\");\n        }\n      }), _jsx(Button, {\n        title: \"\\u232B\",\n        onPress: function onPress() {\n          return setFirstNumber(firstNumber.slice(0, -1));\n        }\n      }), _jsx(Button, {\n        title: \"=\",\n        isBlue: true,\n        onPress: function onPress() {\n          return getResult();\n        }\n      })]\n    })]\n  });\n}","map":{"version":3,"sources":["C:/Users/pc/OneDrive/Escritorio/Aplicaciones/app_calculadora/src/components/MyKeyboard.tsx"],"names":["React","Button","Styles","myColors","MyKeyboard","useState","firstNumber","setFirstNumber","secondNumber","setSecondNumber","operation","setOperation","result","setResult","handleNumberPress","buttonValue","length","handleOperationPress","clear","firstNumberDisplay","screenFirstNumber","color","fontSize","toString","getResult","parseInt","viewBottom","height","width","justifyContent","alignSelf","screenSecondNumber","fontWeight","row","slice"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport Button from \"./Button\";\r\nimport { View, Text } from \"react-native\";\r\nimport { Styles } from \"../styles/GlobalStyles\";\r\nimport { myColors } from \"../styles/Colors\";\r\n\r\nexport default function MyKeyboard() {\r\n  const [firstNumber, setFirstNumber] = React.useState(\"\");\r\n  const [secondNumber, setSecondNumber] = React.useState(\"\");\r\n  const [operation, setOperation] = React.useState(\"\");\r\n  const [result, setResult] = React.useState<Number | null>(null);\r\n\r\n  const handleNumberPress = (buttonValue: string) => {\r\n    if (firstNumber.length < 10) {\r\n      setFirstNumber(firstNumber + buttonValue);\r\n    }\r\n  };\r\n\r\n  const handleOperationPress = (buttonValue: string) => {\r\n    setOperation(buttonValue);\r\n    setSecondNumber(firstNumber);\r\n    setFirstNumber(\"\");\r\n  };\r\n\r\n  const clear = () => {\r\n    setFirstNumber(\"\");\r\n    setSecondNumber(\"\");\r\n    setOperation(\"\");\r\n    setResult(null);\r\n  };\r\n\r\n  const firstNumberDisplay = () => {\r\n    if (result !== null) {\r\n      return (\r\n        <Text\r\n          style={\r\n            result < 99999\r\n              ? [Styles.screenFirstNumber, { color: myColors.result }]\r\n              : [\r\n                  Styles.screenFirstNumber,\r\n                  { fontSize: 50, color: myColors.result },\r\n                ]\r\n          }\r\n        >\r\n          {result?.toString()}\r\n        </Text>\r\n      );\r\n    }\r\n    if (firstNumber && firstNumber.length < 6) {\r\n      return <Text style={Styles.screenFirstNumber}>{firstNumber}</Text>;\r\n    }\r\n    if (firstNumber === \"\") {\r\n      return <Text style={Styles.screenFirstNumber}>{\"0\"}</Text>;\r\n    }\r\n    if (firstNumber.length > 5 && firstNumber.length < 8) {\r\n      return (\r\n        <Text style={[Styles.screenFirstNumber, { fontSize: 70 }]}>\r\n          {firstNumber}\r\n        </Text>\r\n      );\r\n    }\r\n    if (firstNumber.length > 7) {\r\n      return (\r\n        <Text style={[Styles.screenFirstNumber, { fontSize: 50 }]}>\r\n          {firstNumber}\r\n        </Text>\r\n      );\r\n    }\r\n  };\r\n\r\n  const getResult = () => {\r\n    switch (operation) {\r\n      case \"+\":\r\n        clear();\r\n        setResult(parseInt(secondNumber) + parseInt(firstNumber));\r\n        break;\r\n      case \"-\":\r\n        clear();\r\n        setResult(parseInt(secondNumber) - parseInt(firstNumber));\r\n        break;\r\n      case \"*\":\r\n        clear();\r\n        setResult(parseInt(secondNumber) * parseInt(firstNumber));\r\n        break;\r\n      case \"/\":\r\n        clear();\r\n        setResult(parseInt(secondNumber) / parseInt(firstNumber));\r\n        break;\r\n      default:\r\n        clear();\r\n        setResult(0);\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={Styles.viewBottom}>\r\n      <View\r\n        style={{\r\n          height: 120,\r\n          width: \"90%\",\r\n          justifyContent: \"flex-end\",\r\n          alignSelf: \"center\",\r\n        }}\r\n      >\r\n        <Text style={Styles.screenSecondNumber}>\r\n          {secondNumber}\r\n          <Text style={{ color: \"purple\", fontSize: 50, fontWeight: \"500\" }}>\r\n            {operation}\r\n          </Text>\r\n        </Text>\r\n        {firstNumberDisplay()}\r\n      </View>\r\n      <View style={Styles.row}>\r\n        <Button title=\"C\" isGray onPress={clear} />\r\n        <Button\r\n          title=\"+/-\"\r\n          isGray\r\n          onPress={() => handleOperationPress(\"+/-\")}\r\n        />\r\n        <Button title=\"ï¼…\" isGray onPress={() => handleOperationPress(\"ï¼…\")} />\r\n        <Button title=\"Ã·\" isBlue onPress={() => handleOperationPress(\"/\")} />\r\n      </View>\r\n      <View style={Styles.row}>\r\n        <Button title=\"7\" onPress={() => handleNumberPress(\"7\")} />\r\n        <Button title=\"8\" onPress={() => handleNumberPress(\"8\")} />\r\n        <Button title=\"9\" onPress={() => handleNumberPress(\"9\")} />\r\n        <Button title=\"Ã—\" isBlue onPress={() => handleOperationPress(\"*\")} />\r\n      </View>\r\n      <View style={Styles.row}>\r\n        <Button title=\"4\" onPress={() => handleNumberPress(\"4\")} />\r\n        <Button title=\"5\" onPress={() => handleNumberPress(\"5\")} />\r\n        <Button title=\"6\" onPress={() => handleNumberPress(\"6\")} />\r\n        <Button title=\"-\" isBlue onPress={() => handleOperationPress(\"-\")} />\r\n      </View>\r\n      <View style={Styles.row}>\r\n        <Button title=\"1\" onPress={() => handleNumberPress(\"1\")} />\r\n        <Button title=\"2\" onPress={() => handleNumberPress(\"2\")} />\r\n        <Button title=\"3\" onPress={() => handleNumberPress(\"3\")} />\r\n        <Button title=\"+\" isBlue onPress={() => handleOperationPress(\"+\")} />\r\n      </View>\r\n      <View style={Styles.row}>\r\n        <Button title=\".\" onPress={() => handleNumberPress(\".\")} />\r\n        <Button title=\"0\" onPress={() => handleNumberPress(\"0\")} />\r\n        <Button\r\n          title=\"âŒ«\"\r\n          onPress={() => setFirstNumber(firstNumber.slice(0, -1))}\r\n        />\r\n        <Button title=\"=\" isBlue onPress={() => getResult()} />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}