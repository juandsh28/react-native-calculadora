{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { myColors } from \"./src/styles/Colors\";\nimport { ThemeContext } from \"./src/context/ThemeContext\";\nimport MyKeyboard from \"./src/components/MyKeyboard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(\"light\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      theme = _useState2[0],\n      setTheme = _useState2[1];\n\n  return _jsx(ThemeContext.Provider, {\n    value: theme,\n    children: _jsxs(SafeAreaView, {\n      style: theme === \"light\" ? styles.container : [styles.container, {\n        backgroundColor: \"black\"\n      }],\n      children: [_jsx(Switch, {\n        value: theme === \"dark\",\n        onValueChange: function onValueChange() {\n          return setTheme(theme === \"light\" ? \"dark\" : \"light\");\n        }\n      }), _jsx(MyKeyboard, {})]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: myColors.light,\n    alignItems: \"center\",\n    justifyContent: \"flex-start\"\n  }\n});","map":{"version":3,"sources":["C:/Users/pc/OneDrive/Escritorio/Aplicaciones/app_calculadora/App.tsx"],"names":["useState","myColors","ThemeContext","MyKeyboard","App","theme","setTheme","styles","container","backgroundColor","StyleSheet","create","flex","light","alignItems","justifyContent"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,SAASC,QAAT;AACA,SAASC,YAAT;AACA,OAAOC,UAAP;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,kBAA0BJ,QAAQ,CAAC,OAAD,CAAlC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcC,QAAd;;AACA,SACE,KAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAED,KAA9B;AAAA,cACE,MAAC,YAAD;AACE,MAAA,KAAK,EACHA,KAAK,KAAK,OAAV,GACIE,MAAM,CAACC,SADX,GAEI,CAACD,MAAM,CAACC,SAAR,EAAmB;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OAAnB,CAJR;AAAA,iBAOE,KAAC,MAAD;AACE,QAAA,KAAK,EAAEJ,KAAK,KAAK,MADnB;AAEE,QAAA,aAAa,EAAE;AAAA,iBAAMC,QAAQ,CAACD,KAAK,KAAK,OAAV,GAAoB,MAApB,GAA6B,OAA9B,CAAd;AAAA;AAFjB,QAPF,EAWE,KAAC,UAAD,KAXF;AAAA;AADF,IADF;AAiBD;AAED,IAAME,MAAM,GAAGG,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE,CADG;AAETH,IAAAA,eAAe,EAAER,QAAQ,CAACY,KAFjB;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { useState } from \"react\";\nimport { SafeAreaView, StyleSheet, Switch, Text } from \"react-native\";\nimport { myColors } from \"./src/styles/Colors\";\nimport { ThemeContext } from \"./src/context/ThemeContext\";\nimport MyKeyboard from \"./src/components/MyKeyboard\";\n\nexport default function App() {\n  const [theme, setTheme] = useState(\"light\");\n  return (\n    <ThemeContext.Provider value={theme}>\n      <SafeAreaView\n        style={\n          theme === \"light\"\n            ? styles.container\n            : [styles.container, { backgroundColor: \"black\" }]\n        }\n      >\n        <Switch\n          value={theme === \"dark\"}\n          onValueChange={() => setTheme(theme === \"light\" ? \"dark\" : \"light\")}\n        />\n        <MyKeyboard />\n      </SafeAreaView>\n    </ThemeContext.Provider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: myColors.light,\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}