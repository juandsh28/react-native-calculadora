{"ast":null,"code":"import { useContext } from \"react\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { ThemeContext } from \"../context/ThemeContext\";\nimport { Styles } from \"../styles/GlobalStyles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Button(_ref) {\n  var title = _ref.title,\n      onPress = _ref.onPress,\n      isBlue = _ref.isBlue,\n      isGray = _ref.isGray;\n  var theme = useContext(ThemeContext);\n  return _jsx(TouchableOpacity, {\n    style: isBlue ? Styles.btnBlue : isGray ? Styles.btnGray : theme === \"light\" ? Styles.btnLight : Styles.btnDark,\n    onPress: onPress,\n    children: _jsx(Text, {\n      style: isBlue || isGray ? Styles.smallTextLight : theme === \"dark\" ? Styles.smallTextLight : Styles.smallTextDark,\n      children: title\n    })\n  });\n}","map":{"version":3,"sources":["C:/Users/pc/OneDrive/Escritorio/Aplicaciones/app_calculadora/src/components/Button.tsx"],"names":["useContext","ThemeContext","Styles","Button","title","onPress","isBlue","isGray","theme","btnBlue","btnGray","btnLight","btnDark","smallTextLight","smallTextDark"],"mappings":"AAAA,SAASA,UAAT,QAA2B,OAA3B;;;AAEA,SAASC,YAAT;AACA,SAASC,MAAT;;AASA,eAAe,SAASC,MAAT,OAKC;AAAA,MAJdC,KAIc,QAJdA,KAIc;AAAA,MAHdC,OAGc,QAHdA,OAGc;AAAA,MAFdC,MAEc,QAFdA,MAEc;AAAA,MADdC,MACc,QADdA,MACc;AACd,MAAMC,KAAK,GAAGR,UAAU,CAACC,YAAD,CAAxB;AACA,SACE,KAAC,gBAAD;AACE,IAAA,KAAK,EACHK,MAAM,GACFJ,MAAM,CAACO,OADL,GAEFF,MAAM,GACNL,MAAM,CAACQ,OADD,GAENF,KAAK,KAAK,OAAV,GACAN,MAAM,CAACS,QADP,GAEAT,MAAM,CAACU,OARf;AAUE,IAAA,OAAO,EAAEP,OAVX;AAAA,cAYE,KAAC,IAAD;AACE,MAAA,KAAK,EACHC,MAAM,IAAIC,MAAV,GACIL,MAAM,CAACW,cADX,GAEIL,KAAK,KAAK,MAAV,GACAN,MAAM,CAACW,cADP,GAEAX,MAAM,CAACY,aANf;AAAA,gBASGV;AATH;AAZF,IADF;AA0BD","sourcesContent":["import { useContext } from \"react\";\r\nimport { TouchableOpacity, Text } from \"react-native\";\r\nimport { ThemeContext } from \"../context/ThemeContext\";\r\nimport { Styles } from \"../styles/GlobalStyles\";\r\n\r\ninterface ButtonProps {\r\n  onPress: () => void;\r\n  title: string;\r\n  isBlue?: boolean;\r\n  isGray?: boolean;\r\n}\r\n\r\nexport default function Button({\r\n  title,\r\n  onPress,\r\n  isBlue,\r\n  isGray,\r\n}: ButtonProps) {\r\n  const theme = useContext(ThemeContext);\r\n  return (\r\n    <TouchableOpacity\r\n      style={\r\n        isBlue\r\n          ? Styles.btnBlue\r\n          : isGray\r\n          ? Styles.btnGray\r\n          : theme === \"light\"\r\n          ? Styles.btnLight\r\n          : Styles.btnDark\r\n      }\r\n      onPress={onPress}\r\n    >\r\n      <Text\r\n        style={\r\n          isBlue || isGray\r\n            ? Styles.smallTextLight\r\n            : theme === \"dark\"\r\n            ? Styles.smallTextLight\r\n            : Styles.smallTextDark\r\n        }\r\n      >\r\n        {title}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}